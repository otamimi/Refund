@model WebApplication16.Models.RequestViewModel
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Request</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})


        <div class="form-group">
            @Html.LabelFor(m => m.Types, new {@class = "col-md-2 control-label "})
            <div class="col-md-10">


                @foreach (var requestType in Model.Types)
                {
                    <label class="radio-inline">
                        <input type="radio" name="optionsRadios" id="optionsRadios1" value=@requestType.Id checked>
                        @requestType.Name
                    </label>
                }


            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Amount, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Amount, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group dropdown">
            
           
            @Html.LabelFor(model => model.Countries, "Countries", new {@class = "control-label col-md-2"})

            <div class="col-md-10">
                @Html.DropDownList("Countries", null, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Countries, "", new {@class = "text-danger"})
            </div>
            @*<div class="col-md-2">
                <button class="btn btn-default dropdown-toggle form-control text-left" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true">
                    @Model.Countries.First(c => c.Name == "KSA").Name
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu form-control" aria-labelledby="dropdownMenu1">

                    @foreach (var country in Model.Countries)
                    {
                        <li>
                            <a href="#">@country.Name</a>
                        </li>
                    }


                </ul>
            </div>*@
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FromBankAccount, "FromBankAccount", htmlAttributes: new { @class = "control-label col-md-2" })
            @if (Model.FromBankAccount==null)
            {
                <button class="btn-primary form-contro col-md-2" >Create</button>
            }
            <div class="col-md-10">
            @*    @Html.DropDownListFor(model => model.FromBankAccount, null, htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.FromBankAccount, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </div>
        @*

        <div class="form-group">
            @Html.LabelFor(model => model.PayrollId, "PayrollId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PayrollId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PayrollId, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            @Html.LabelFor(model => model.ReferenceNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReferenceNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReferenceNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeUserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeUserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeUserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            @Html.LabelFor(model => model.FromBankAccount, "FromBankAccount", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FromBankAccount", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FromBankAccount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ToBankAccount, "ToBankAccount", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ToBankAccount", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ToBankAccount, "", new { @class = "text-danger" })
            </div>
        </div>

        *@
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}